services:
  api1:
    image: fericode/api1
    build:
      context: ./src/Api1
    container_name: api1
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - Keycloak__Authority=http://keycloak:8080/realms/ata/
    depends_on:
      - keycloak
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.postgres.rule=Host(`api1.farshaddavoudi.ir`)"
      - "traefik.http.routers.postgres.entrypoints=https"
      - "traefik.http.routers.postgres.tls=true"
      - "traefik.http.services.postgres.loadbalancer.server.port=8080"

  client1:
    image: fericode/client1
    build:
      context: ./src/Client1/Web
    container_name: client1
    ports:
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - Keycloak__Authority=http://keycloak:8080/realms/ata/
      - Keycloak__ClientId=client1
      - Keycloak__ClientSecret=32mOINpi4LnkOLlherzWfZuZeETe9Wce
      - ApiUrls__WeatherApi=http://api1:8080
    depends_on:
      - api1
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.postgres.rule=Host(`client1.farshaddavoudi.ir`)"
      - "traefik.http.routers.postgres.entrypoints=https"
      - "traefik.http.routers.postgres.tls=true"
      - "traefik.http.services.postgres.loadbalancer.server.port=8081"

  keycloak:
    image: quay.io/keycloak/keycloak
    container_name: keycloak
    ports:
      - "8083:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command: start-dev
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.postgres.rule=Host(`sso.farshaddavoudi.ir`)"
      - "traefik.http.routers.postgres.entrypoints=https"
      - "traefik.http.routers.postgres.tls=true"
      - "traefik.http.services.postgres.loadbalancer.server.port=8080"

networks:
  proxy:
    external: true
