@page "/user-claims"
@using System.Security.Claims
@using Client1.Client.Weather
@using Microsoft.AspNetCore.Authorization
@inject IWeatherForecaster WeatherForecaster
@attribute [Authorize]

<PageTitle>User Claims</PageTitle>

<h1>User Claims in webassembly</h1>

@if (claims.Any())
{
    <ul>
        @foreach (var claim in claims)
        {
            <li><b>@claim.Type:</b> @claim.Value</li>
        }
    </ul>
}

@if(!string.IsNullOrEmpty(userInfo))
{
    <p>Userinfo from server</p>
    <pre>@userInfo</pre>
}

@code {
    private IEnumerable<Claim> claims = Enumerable.Empty<Claim>();
    private string userInfo = string.Empty;

    [CascadingParameter]
    private Task<AuthenticationState>? AuthState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (AuthState == null)
        {
            return;
        }

        userInfo = await WeatherForecaster.GetUserRoleStringFromServer();

        var authState = await AuthState;
        claims = authState.User.Claims;
    }
}
